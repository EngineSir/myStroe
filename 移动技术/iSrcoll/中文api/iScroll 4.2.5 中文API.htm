<!DOCTYPE html>
<!-- saved from url=(0038)http://www.gafish.net/api/iScroll.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta charset="utf-8">
	<title>iScroll 4.2.5 中文API</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="">
	<meta name="author" content="gafish">

	<!-- Le styles -->
	<link href="http://www.gafish.net/api/assets/css/bootstrap.css" rel="stylesheet">
	<link href="http://www.gafish.net/api/assets/css/bootstrap-responsive.css" rel="stylesheet">
	<link href="http://www.gafish.net/api/assets/css/docs.css" rel="stylesheet">

	<!-- Le fav and touch icons -->
	<link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://www.gafish.net/api/assets/ico/apple-touch-icon-144-precomposed.png">
	<link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://www.gafish.net/api/assets/ico/apple-touch-icon-114-precomposed.png">
	  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://www.gafish.net/api/assets/ico/apple-touch-icon-72-precomposed.png">
					<link rel="apple-touch-icon-precomposed" href="http://www.gafish.net/api/assets/ico/apple-touch-icon-57-precomposed.png">
								   <link rel="shortcut icon" href="http://www.gafish.net/api/assets/ico/favicon.png">

  </head>

  <body data-spy="scroll" data-target=".bs-docs-sidebar">

	<!-- Navbar
	================================================== -->
	<div class="navbar navbar-inverse navbar-fixed-top">
	  <div class="navbar-inner">
		<div class="container">
		  <div class="nav-collapse collapse">
			<ul class="nav">
			  <li class="">
				<a href="http://www.gafish.net/">Home</a>
			  </li>
			  <li class="active">
				<a href="./iScroll 4.2.5 中文API_files/iScroll 4.2.5 中文API.htm">iScroll 4 中文API</a>
			  </li>
			</ul>
		  </div>
		</div>
	  </div>
	</div>

<!-- Subhead
================================================== -->
<header class="jumbotron subhead">
  <div class="container">
	<h1>iScroll 4.2.5 中文API</h1>
  </div>
</header>

  <div class="container">

	<!-- Docs nav
	================================================== -->
	<div class="row">
	  <div class="span3 bs-docs-sidebar">
		<ul class="nav nav-list bs-docs-sidenav affix-top">
		  <li class="active"><a href="http://www.gafish.net/api/iScroll.html#overview"><i class="icon-chevron-right"></i> 概况</a></li>
		  <li class=""><a href="http://www.gafish.net/api/iScroll.html#quickStart"><i class="icon-chevron-right"></i> 快速上手</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#caseIscroll"><i class="icon-chevron-right"></i> 实例化iScroll</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#parameter"><i class="icon-chevron-right"></i> iScroll 参数</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#api"><i class="icon-chevron-right"></i> iScroll 方法API</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#refresh"><i class="icon-chevron-right"></i> 拉动刷新</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#zoom"><i class="icon-chevron-right"></i> 缩放</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#snap"><i class="icon-chevron-right"></i> 捕捉元素</a></li>
		  <li><a href="http://www.gafish.net/api/iScroll.html#diy"><i class="icon-chevron-right"></i> 自定义滚动条</a></li>
		</ul>
	  </div>
	  <div class="span9">


		<!-- 概况
		================================================== -->
		<section id="overview">
			<div class="page-header">
				<h1>概况</h1>
			</div>

			<h3>资料来源</h3>
			<ol>
				<li><a href="http://cubiq.org/iscroll-4" target="_blank">http://cubiq.org/iscroll-4</a></li>
				<li><a href="http://www.cnblogs.com/wanghun/archive/2012/10/17/2727416.html" target="_blank">http://www.cnblogs.com/wanghun/archive/2012/10/17/2727416.html</a></li>
				<li><a href="http://qbaty.iteye.com/blog/1221061" target="_blank">http://qbaty.iteye.com/blog/1221061</a></li>
			</ol>

			<h3>iScroll基本信息</h3>
			<p>官网：http://cubiq.org/iscroll-4</p>
			<p>更新：2012.07.14</p>
			<p>版本：v4.2.5</p>
			<p>兼容：iPhone/Ipod touch &gt;=3.1.1, iPad &gt;=3.2, Android &gt;=1.6, Desktop Webkit, Firefox, Opera desktop/mobile.</p>
			<div class="alert alert-info">
				<a href="http://www.gafish.net/api/down/iScroll%20v4.2.5.js" target="_blank">下载iScroll4.2.5</a>
			</div>

			<h3>iScroll的历史</h3>
			<p>之所以iscroll会诞生，主要是因为无论是在iphone、ipod、android 或是更早前的移动webkit都没有提供一种原生的方式来支持在一个固定高度的容器内滚动内容。 </p>
			<p>这个不幸的规则导致所有web-app要模拟成app的样子时，只能由一个绝对定位的header 或是footer再加上一个可以内容的滚动的中间区域组成。 </p>
			<p>幸运的是移动webkit提供了一种强大的硬件加速的CSS属性，这个属性可以用来模拟这个缺失的功能，Iscroll从这里开始了前进之路，但是没有不带刺的玫瑰。让内容滚动像原生方式一般比想象中要难 </p>
			<div class="alert alert-info">
				<strong>Tigs：</strong>截至2013年，IOS5 添加如下样式 overflow:scroll; -webkit-overflow-scrolling:touch; 已经能够支持区域滚动了。但是andriod4 还是不行...
			</div>

			<h3>iScroll 4 新特性</h3>
			<p>iScroll 4 这个版本完全重写了iScroll 3这个框架的原始代码，除了以前版本的iScroll特性以外，iScroll 4 还包括如下的特性：</p>
			<ol>
				<li>缩放</li>
				<li>拉动刷新</li>
				<li>速度和性能提升</li>
				<li>精确捕捉元素</li>
				<li>自定义滚动条</li>
			</ol>
		</section>



		<!-- 快速上手
		================================================== -->
		<section id="quickStart">
			<div class="page-header">
				<h1>快速上手</h1>
			</div>

			<h3>使用指南</h3>
			<p>在此文档中你会发现很多例子来教会你如何快速上手iScroll脚本库。参看文中的demo小例子并仔细阅读此文档，可能有点小无聊，但是这篇文章中却是iScroll这个脚本库的精髓之所在哦。</p>
			<p>iScroll需要对所要进行滚动的元素进行初始化，并且不限定一个页面中使用iScroll的元素的个数（这里不考虑您的硬件配置）。滚动元素中内容的类型和长度在一定程度上将会影响iScroll脚本库里可以同时使用的元素的个数。</p>
			<p>使用iScroll这个脚本库时，DOM树的结构要足够简单，移除不必要的标签，尽量避免过多的标签嵌套使用。</p>
			<p>最优的使用iScroll的结构如下所示：</p>
<pre class="prettyprint linenums">	&lt;div id="wrapper"&gt;
		&lt;ul&gt;
			&lt;li&gt;&lt;/li&gt;
			  .....
			&lt;/ul&gt;
	&lt;/div&gt; 
</pre>
			<p>在这个小例子中，ul标签将会被滚动。iScroll一定要与滚动内容外面的wrapper进行联系才会产生效果。</p>
			<h3>注意事项</h3>
			<p>只有wrapper里的第一个子元素才可以滚动，如果你想要更多的元素可以滚动，那么你可以试试下面的这种写法：</p>
<pre class="prettyprint linenums">	&lt;div id="wrapper"&gt;
		&lt;div id="scroller"&gt;
			&lt;ul&gt;
				&lt;li&gt;&lt;/li&gt;
				...
			&lt;/ul&gt;
			&lt;ul&gt;
				&lt;li&gt;&lt;/li&gt;
				...
			&lt;/ul&gt;
		&lt;/div&gt;
	&lt;/div&gt;
</pre>
			<p>在这个例子中，scroller这个元素可以滚动，即便它包含两个ul元素</p>
		</section>



		<!-- 实例化iScroll
		================================================== -->
		<section id="caseIscroll">
			<div class="page-header">
				<h1>实例化iScroll</h1>
			</div>
			<p>iScroll必须在调用之前实例化，你可以在下面几种情况下对iScroll进行实例化：</p>
			<ol>
				<li>onDOMContentLoaded</li>
				<li>onLoad</li>
				<li>以内联inline方式</li>
			</ol>
			<h3>ONDOMContentLoaded</h3>
			<p>适用于滚动内容只包含文字、图片，并且所有的图片都有固定的尺寸</p>
			<p>使用方法：（在head标签中添加如下代码）</p>
<pre class="prettyprint linenums">	&lt;script src="iscroll.js"&gt;&lt;/script&gt;
	&lt;script&gt;
			var myscroll;
			function loaded(){
				myscroll=new iScroll("wrapper");
			}
			window.addEventListener("DOMContentLoaded",loaded,false);
	&lt;/script&gt;
</pre>
			<div class="alert alert-info">
				<strong>注意：</strong> myscroll这个变量是全局的，因此你可以在任何地方调用它的函数 
			</div>
			<h3>onLoad</h3>
			<p>有些时候在DOMContentLoaded的状态下就初始化iScroll其实是有点草率的，因此此时页面的资源可能还没有全部加载完毕。如果你遇到了一些很怪异的行为可以试试下面的写法：</p>
<pre class="prettyprint linenums">	&lt;script src="iscroll.js"&gt;&lt;/script&gt;
	&lt;script&gt;
		var myscroll;
		function loaded(){
			setTimeout(function(){
				myscroll=new iScroll("wrapper");
			}，100 );
		}
		window.addEventListener("load",loaded,false);
	&lt;/script&gt;
</pre>
			<p>这种情况下iScroll会在页面资源（包括图片）加载完毕100ms之后得到初始化，这应该是一种比较安全的调用iScroll的方式。</p>
			<h3>inline初始化</h3>
			<p>这种情况会在页面加载到js的时候就进行调用，此方法不推荐使用，但是很多javascript的大牛都在用这种方式，我又 有什么理由不赞成呢？</p>
<pre class="prettyprint linenums">	&lt;script src="iscroll.js"&gt;&lt;/script&gt;
	&lt;div id="wrapper"&gt;
		&lt;ul&gt;
			&lt;li&gt;&lt;/li&gt;
			.....
		&lt;/ul&gt;
	&lt;/div&gt; 
	&lt;script&gt;
		var myscroll=new iScroll("wrapper");
	&lt;/script&gt;
</pre>
			<p>不过建议你使用一些框架的ready方法来安全调用iScroll（比如jquery里的ready()）。</p>
		</section>



		<!-- iScroll 参数
		================================================== -->
		<section id="parameter">
			<div class="page-header">
				<h1>iScroll 参数</h1>
			</div>
			<p>iScroll里的第一个参数很简单就是外容器的id，或者css语法格式的class，如'.home .scroll'。</p>
			<p>第二个参数允许你自定义一些属性配置和方法，比如下面的这段代码：</p>
<pre class="prettyprint linenums">	&lt;script&gt;
		var myscroll=new iScroll("wrapper",{hScrollbar:false, vScrollbar:false});
	&lt;/script&gt;
</pre>
			<p>第二个参数通常都是一个对象，像上面的这个例子里就设定了不显示滚动条。所有参数如下（<code>*</code>号为常见参数）：</p>
			<table class="table table-bordered table-striped">
				<caption>基本参数</caption>
				<thead>
				<tr>
					<th style="width: 100px;">参数名</th>
					<th>说明</th>
					<th>可选值</th>
					<th>默认值</th>
				</tr>
				</thead>
				<tbody>
				<tr>
					<td>hScroll <code>*</code></td>
					<td>是否允许水平滚动</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>vScroll <code>*</code></td>
					<td>是否允许垂直滚动</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>bounce <code>*</code></td>
					<td>是否超过实际位置反弹</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>bounceLock</td>
					<td>当内容少于滚动是否可以反弹  </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>false</td>
				</tr>
				<tr>
					<td>momentum <code>*</code></td>
					<td>是否开启拖动惯性  </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>lockDirection</td>
					<td>当水平或垂直拖动时是否锁定另一边的拖动  </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>useTransform</td>
					<td>是否使用CSS变形  </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>useTransition</td>
					<td>是否使用CSS变换  </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>false</td>
				</tr>
				<tr>
					<td>checkDOMChanges</td>
					<td>是否自动检测内容变化 </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>false</td>
				</tr>
				<tr>
					<td>topOffset</td>
					<td>已经滚动的基准值(一般用在拖动刷新)   </td>
					<td>数字值</td>
					<td>0</td>
				</tr>
				<tr>
					<td>x</td>
					<td>滚动水平初始位置（负值）</td>
					<td>数字值</td>
					<td>0</td>
				</tr>
				<tr>
					<td>y</td>
					<td>滚动垂直初始位置（负值）</td>
					<td>数字值</td>
					<td>0</td>
				</tr>
				</tbody>
			</table>
			<table class="table table-bordered table-striped">
				<caption>Scrollbar 的相关参数  </caption>
				<thead>
				<tr>
					<th style="width: 100px;">参数名</th>
					<th>说明</th>
					<th>可选值</th>
					<th>默认值</th>
				</tr>
				</thead>
				<tbody><tr>
					<td>hScrollbar <code>*</code></td>
					<td>是否显示水平滚动条</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>vScrollbar <code>*</code></td>
					<td>是否显示垂直滚动条</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>true</td>
				</tr>
				<tr>
					<td>fixedScrollbar</td>
					<td>在iOS系统上，当元素拖动超出了scroller的边界时，滚动条会收缩，设置为<code>true</code>可以禁止滚动条超出scroller的可见区域。</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>默认在Android上为<code>true</code>， iOS上为<code>false</code></td>
				</tr>
				<tr>
					<td>hideScrollbar</td>
					<td>是否隐藏滚动条</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>默认在Android上为<code>false</code>， iOS上为<code>true</code></td>
				</tr>
				<tr>
					<td>fadeScrollbar</td>
					<td>滚动条是否渐隐渐显</td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>默认在Android上为<code>false</code>， iOS上为<code>true</code></td>
				</tr>
				<tr>
					<td>scrollbarClass <code>*</code></td>
					<td>字定义滚动条的样式名</td>
					<td>自定义class</td>
					<td>''</td>
				</tr>
				</tbody>
			</table>
			<table class="table table-bordered table-striped">
				<caption>Zoom 放大相关的参数 </caption>
				<thead>
				<tr>
					<th style="width: 100px;">参数名</th>
					<th>说明</th>
					<th>可选值</th>
					<th>默认值</th>
				</tr>
				</thead>
				<tbody><tr>
					<td>zoom</td>
					<td>是否放大  </td>
					<td><code>false</code> 否 <code>true</code> 是</td>
					<td>false</td>
				</tr>
				<tr>
					<td>zoomMin</td>
					<td>放大的最小倍数 </td>
					<td>数字值</td>
					<td>1</td>
				</tr>
				<tr>
					<td>zoomMax</td>
					<td>放大的最大倍数</td>
					<td>数字值</td>
					<td>4</td>
				</tr>
				<tr>
					<td>doubleTapZoom</td>
					<td>双击放大倍数</td>
					<td>数字值</td>
					<td>2</td>
				</tr>
				<tr>
					<td>wheelAction</td>
					<td>鼠标滚动行为（还可以是zoom）  </td>
					<td><code>none</code> 不支持 <code>'scroll'</code> 鼠标滚动 <code>'zoom'</code> 鼠标缩放</td>
					<td>'scroll'</td>
				</tr>
				</tbody>
			</table>
			<table class="table table-bordered table-striped">
				<caption>snap 捕捉元素相关的参数 </caption>
				<thead>
				<tr>
					<th style="width: 100px;">参数名</th>
					<th>说明</th>
					<th>可选值</th>
					<th>默认值</th>
				</tr>
				</thead>
				<tbody><tr>
					<td>snap</td>
					<td>是否开启捕捉元素，snap值可以为true 或是 DOM元素的tagname，当为true 时，捕捉的元素会根据可滚动的位置和滚动区域计算得到可滑动几页。如果为tagname,则滑动会对齐到捕捉的元素上。</td>
					<td><code>false</code> 否 <code>true</code> 是&lt; <code>DOM元素的tagname</code> </td>
					<td>false</td>
				</tr>
				<tr>
					<td>snapThreshold</td>
					<td>滑动的长度限制，只有大于这个距离才会触发捕捉元素事件 </td>
					<td>数字值</td>
					<td>1</td>
				</tr>
				</tbody>
			</table>
			<table class="table table-bordered table-striped">
				<caption>自定义 Events 的相关参数    </caption>
				<thead>
				<tr>
					<th style="width: 100px;">参数名</th>
					<th>说明</th>
					<th>可选值</th>
					<th>默认值</th>
				</tr>
				</thead>
				<tbody><tr>
					<td>onBeforeScrollStart</td>
					<td>开始滚动前的事件回调<br>默认是阻止浏览器默认行为  </td>
					<td rowspan="12"><code>null</code> 不设置 <br><code>Function</code> 自定义函数</td>
					<td>function (e) { e.preventDefault(); }</td>
				</tr>
				<tr>
					<td>onRefresh</td>
					<td>refresh 的回调</td>
					<td rowspan="11">null</td>
				</tr>
				<tr>
					<td>onScrollStart</td>
					<td>开始滚动的回调  </td>
				</tr>
				<tr>
					<td>onBeforeScrollMove</td>
					<td>在内容移动前的回调  </td>
				</tr>
				<tr>
					<td>onScrollMove</td>
					<td>内容移动的回调</td>
				</tr>
				<tr>
					<td>onBeforeScrollEnd</td>
					<td>在滚动结束前的回调</td>
				</tr>
				<tr>
					<td>onScrollEnd</td>
					<td>在滚动完成后的回调</td>
				</tr>
				<tr>
					<td>onTouchEnd</td>
					<td>手离开屏幕后的回调  </td>
				</tr>
				<tr>
					<td>onDestroy</td>
					<td>销毁实例的回调</td>
				</tr>
				<tr>
					<td>onZoomStart</td>
					<td>放大开始时的回调</td>
				</tr>
				<tr>
					<td>onZoom</td>
					<td>放大的回调</td>
				</tr>
				<tr>
					<td>onZoomEnd</td>
					<td>放大结束后的回调</td>
				</tr>
				</tbody>
			</table>
		</section>



		<!-- iScroll 方法API
		================================================== -->
		<section id="api">
			<div class="page-header">
				<h1>iScroll 方法API</h1>
			</div>
			<h3>destroy </h3>
			<p>销毁你实例化的iScroll 实例，包括之前绑定的所有iscroll 事件。</p>
			<h3>refresh </h3>
			<p>这个方法非常有用，当你的滚动区域的内容发生改变 或是 滚动区域不正确，都用通过调用refresh 来使得iscroll 重新计算滚动的区域，包括滚动条，来使得iscroll 适合当前的dom。 </p>
			<h3>scrollTo </h3>
			<p>这个方法接受4个参数 x, y, time, relative x 为移动的x轴坐标，y为移动的y轴坐标, time为移动时间，relative表示是否相对当前位置。</p>
			<h3>scrollToElement  </h3>
			<p>这个方法实际上是对scrollTo的进一步封装，接受两个参数(el,time)，el为需要滚动到的元素引用，time为滚动时间。 </p>
			<h3>scrollToPage   </h3>
			<p>此方法接受三个参数(pageX,pageY,time) 当滚动内容的高宽大于滚动范围时，iscroll 会自动分页，然后就能使用scrollToPage方法滚动到页面。当然，当hscroll 为false 的时候，不能左右滚动。pageX这个参数就失去效果  </p>
			<h3>disable </h3>
			<p>调用这个方法会立即停止动画滚动，并且把滚动位置还原成0，取消绑定touchmove, touchend、touchcancel事件。  </p>
			<h3>enable  </h3>
			<p>调用这个方法，使得iscroll恢复默认正常状态 </p>
			<h3>stop </h3>
			<p>立即停止动画 </p>
			<h3>zoom  </h3>
			<p>改变内容的大小倍数,此方法接受4个参数，x,y,scale,time 分别表示的意思为，放大的基准坐标，以及放大倍数，动画时间  </p>
			<h3>isReady   </h3>
			<p>当iscroll 没有处于正在滚动，没有移动过，没有改变大小时，此值为true </p>
		</section>



		<!-- 拉动刷新
		================================================== -->
		<section id="refresh">
			<div class="page-header">
				<h1>拉动刷新</h1>
			</div>
			<h3>说明</h3>
			<p>自从Twitter和一些Apple的本地化应用出现了这个效果之后，这个效果就变得非常流行，你可以<a href="http://vimeo.com/20475828" target="_blank">点击这里（需要翻墙）</a>看看视频先一睹为快，也可以<a href="http://www.gafish.net/api/demo/pull-to-refresh/index.html" target="_blank">点击这里</a>试试拉动刷新是如何工作的。</p>
			<h3>实现原理</h3>
			<ol>
				<li>通过 <code>topOffset</code> 参数属性设置iScroll已经滚动的基准值；</li>
				<li>通过 <code>onScrollMove</code> 参数方法判断当前滚动是到顶端还是底端；</li>
				<li>通过 <code>onScrollEnd</code> 参数方法触发加载新数据，再通过 <code>refresh</code> 方法重新渲染界面；</li>
				<li>通过 <code>onRefresh</code> 参数方法调整刷新后的界面结构；</li>
			</ol>
<pre class="prettyprint linenums">	&lt;script&gt;
		var myScroll =new iScroll("wrapper",{
			topOffset: 50,
			onRefresh: function(){...},
			onScrollMove: function(){...},
			onScrollEnd: function()...{}
		});
	&lt;/script&gt;
</pre>
			<p>具体的实现代码可以查看<a href="http://www.gafish.net/api/demo/pull-to-refresh/index.html" target="_blank">这里</a>的源文件；</p>
		</section>



		<!-- 缩放
		================================================== -->
		<section id="zoom">
			<div class="page-header">
				<h1>缩放</h1>
			</div>
			<p>我们不得不面对一个事实，那就是光有滚动其实没什么新意的。这就是为什么在iScroll 4这个版本里我们允许你可以放 大和缩小。想要这个功能，只需要设置放大的参数zoom 为true即可实现利用手势来放大和缩小。你可以看看这儿。</p>
			<p>双击放大和缩小的功能在iScroll 4里也是得到支持的。要使用缩放功能，你至少需要如下配置：</p>
<pre class="prettyprint linenums">	&lt;script&gt;
		var myScroll =new iScroll("wrapper",{zoom:true});
	&lt;/script&gt;
</pre>
			<p>如果你想对缩放功能进行深度的自定义的话可以使用下面的一些选项：</p>
			<table class="table table-bordered table-striped">
				<thead>
				<tr>
				<th style="width: 100px;">参数名</th>
				<th>说明</th>
				</tr>
				</thead>
				<tbody>
				<tr>
				<td>zoomMax</td>
				<td>指定允许放大的最大倍数，默认为4</td>
				</tr>
				</tbody>
			</table>
			<div class="alert alert-info">
				<strong>【注意事项】：</strong> 如果想要图片缩放的效果很好的话要把他们放到硬件的合成层中。通俗点说，就是在所有需要缩放的img元素上使用-webkit-transform:translate3d(0,0,0)来实现，而且尤为重要的是，硬件的加速会占用大量资源，要谨慎使用，否则你的应用可能就此崩溃。
			</div>
		</section>



		<!-- 捕捉元素
		================================================== -->
		<section id="snap">
			<div class="page-header">
				<h1>捕捉元素</h1>
			</div>
			<p>捕捉的功能会促使scroller去重新定义位置，这样可以制作更加花哨的传送带效果。<a href="http://cubiq.org/dropbox/iscroll4/examples/carousel/" target="_blank">点击这里</a>有个小例子。</p>
			<p>默认情况下，iScroll将scroller分成四分体，或者是相同大小的wrapper。iScroll 4加入了这个属性允许捕捉scroller里的任何元素，不考虑外部wrapper的大小。如果你想要实现这样的传送带效果，我建议你使用“quadrant”分割。最佳的设置如下：</p>
<pre class="prettyprint linenums">	&lt;script&gt;
		var myscroll=new iScroll("wrapper",{
			snap:true, 
			momentum:false, 
			hScrollbar:false, 
			vScrollbar: false
		});
	&lt;/script&gt;
</pre>
			<p>捕获元素，可以通过传递一个字符串来作为查询条件，如下：</p>
<pre class="prettyprint linenums">	&lt;script&gt;
		var myscroll=new iScroll("wrapper",{
			snap:"li", 
			momentum:false, 
			hScrollbar:false, 
			vScrollbar: false
		});
	&lt;/script&gt;
</pre>
			<p>在这个例子中scroller可以捕捉到滚动区域中最左上角的li元素</p>
		</section>


		<!-- 自定义滚动条
		================================================== -->
		<section id="diy">
			<div class="page-header">
			  <h1>自定义滚动条</h1>
			</div>

			<p>在iScroll 4这个版本中，可以利用一系列的css来自定义滚动条的呈现。可以给滚动条添加一个class参数，如下：</p>
<pre class="prettyprint linenums">	&lt;script&gt;
		var myscroll=new iScroll("wrapper",{
			scrollbarClass: "myScrollbar"
		});
	&lt;/script&gt;
</pre>
			<p>你可以<a href="http://cubiq.org/dropbox/iscroll4/examples/custom-scrollbar/" target="_blank">点击这里</a>看一个小例子，在这个小例子里，myScrollbarH这个类被添加到了水平滚动条上，myScrollbarV这个类则被添加给了垂直方向上的滚动条上了。需要提醒的是，滚动条是由两个元素组合而成的：容器和显示器。容器同wrapper的高度相同，而显示器则代表的是滚动条本身。</p>
			<p>滚动条的HTML结构如下：</p>
<pre class="prettyprint linenums">	&lt;div class="myScrollbarV"&gt;
		&lt;div&gt;&lt;/div&gt;
	&lt;/div&gt;

	.myscrollbarV{
		position:absolute;z-index:100;width:8px;bottom:7px;top:2px;right:1px;
	}

	.myScrollbarV &gt; div {
		position:absolute;
		z-index:100;
		width:100%;
		/* The following is probably what you want to customize */
		background:-webkit-gradient(linear, 0 0, 100% 0, from(#f00), to(#900));
		border:1px solid #800;
		-webkit-background-clip:padding-box;
		-webkit-box-sizing:border-box;
		-webkit-border-radius:4px;
		-webkit-box-shadow:inset 1px 1px 0 rgba(255,255,255,0.5);
	}
</pre>	
		  </section>



	  </div>
	</div>

  </div>



	<!-- Footer
	================================================== -->
	<footer class="footer">
	  <div class="container">
		<p>www.gafish.net</p>
		<p>
			<script type="text/javascript">
			var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
			document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0e7c9d1f1f5d1bf7e840d6b749d1b1c1' type='text/javascript'%3E%3C/script%3E"));
			</script><script src="./iScroll 4.2.5 中文API_files/h.js" type="text/javascript"></script><a href="http://tongji.baidu.com/hm-web/welcome/ico?s=0e7c9d1f1f5d1bf7e840d6b749d1b1c1" target="_blank"><img border="0" src="./iScroll 4.2.5 中文API_files/21.gif" width="20" height="20"></a>			
		</p>
	  </div>
	</footer>



	<!-- Le javascript
	================================================== -->
	<!-- Placed at the end of the document so the pages load faster -->
	<script src="./iScroll 4.2.5 中文API_files/jquery.js"></script>
	<script src="./iScroll 4.2.5 中文API_files/bootstrap-scrollspy.js"></script>
	<script src="./iScroll 4.2.5 中文API_files/bootstrap-affix.js"></script>

	<script src="./iScroll 4.2.5 中文API_files/application.js"></script>



  

</body></html>